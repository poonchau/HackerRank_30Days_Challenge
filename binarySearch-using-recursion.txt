function binarySearch(arr, target, start, end){
    // base case when startIndex is greter than endIndex
    if(start >= end)
      return false;

    let mid = Math.floor(start + (end-start/2));
     if(arr[mid]==target){
       return `target value ${target} found at index ${mid}`
     }else if(arr[mid] > target){
       return binarySearch(arr, target, start, mid-1)
     }else if(arr[mid] < target){
        return binarySearch(arr, target, mid+1, end)
     }
   }




let arr = [2,4,6,7,8,12,20];
let startIndex = 0;
let endIndex = arr.length - 1;
let targetValue = 6;
console.log(binarySearch(arr, targetValue, startIndex, endIndex));

=========================================================================

function binarySearch(arr, target, start, end){
    //base case
    if(start > end){
        return false;
    }
   // calculate mid
   let mid = Math.floor(start + (end-start/2));

   //check if target is equal to mid
   if(target == arr[mid]){
        return true;
   }else if(target < arr[mid]){
    return binarySearch(arr, target, start, mid-1);
   }else if(target > arr[mid]){
    return binarySearch(arr, target, mid+1, end);
   }

}



console.log(binarySearch([2,4,6,7,8,12,20], 21, 0, 6));


