
Valid Parentheses


Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false
Example 4:

Input: s = "([)]"
Output: false
Example 5:

Input: s = "{[]}"
Output: true

<-------------------------------------------------------Code ---------------------------------------------------------------------->

var isValid = function(str) {
    let bracketArr=[];
    for(let i=0;i<str.length;i++){
        if(str[i]=='(' || str[i]=='[' || str[i]=='{' )
            bracketArr.push(str[i]);
        else if(str[i]==')' || str[i]==']' || str[i]=='}'){
            if(bracketArr[bracketArr.length-1]=='(' || bracketArr[bracketArr.length-1]=='[' || bracketArr[bracketArr.length-1]=='{')
               bracketArr.pop();
        }
    }
    
    return bracketArr.length==0;
    
    
};

console.log(isValid('(){'));
